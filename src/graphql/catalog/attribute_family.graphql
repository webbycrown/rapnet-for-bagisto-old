# Catalog\AttributeFamily Related APIs
extend type Query @guard(with: ["admin-api"]) {
    attributeGroups: [AttributeGroup!] @paginate(type: "PAGINATOR" defaultCount:10 model: "Webkul\\Attribute\\Models\\AttributeGroup")

    attributeGroup(id: ID @eq): AttributeGroup @find(model: "Webkul\\Attribute\\Models\\AttributeGroup")

    attributeFamilies(input: FilterAttributeFamiliesInput @builder(method: "Webkul\\GraphQLAPI\\Queries\\Catalog\\FilterAttributeFamilies")): [AttributeFamily!] @paginate(type: "PAGINATOR" defaultCount:10 model: "Webkul\\Attribute\\Models\\AttributeFamily")

    attributeFamily(id: ID @eq): AttributeFamily @find(model: "Webkul\\Attribute\\Models\\AttributeFamily")
}

extend type Mutation @guard {
    createAttributeGroup(
        input: CreateAttributeGroupInput!
    ): AttributeGroup @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Catalog\\AttributeGroupMutation@store")

    updateAttributeGroup(
        id: ID!,
        input: CreateAttributeGroupInput!
    ): AttributeGroup @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Catalog\\AttributeGroupMutation@update")

    deleteAttributeGroup(id: ID!): AttributeGroup @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Catalog\\AttributeGroupMutation@delete")

    createAttributeFamily(
        input: CreateAttributeFamilyInput!
    ): AttributeFamily @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Catalog\\AttributeFamilyMutation@store")

    updateAttributeFamily(
        id: ID!,
        input: CreateAttributeFamilyInput!
    ): AttributeFamily @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Catalog\\AttributeFamilyMutation@update")

    deleteAttributeFamily(id: ID!): AttributeFamily @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Catalog\\AttributeFamilyMutation@delete")
}

input CreateAttributeGroupInput {
    name: String!
    position: Int!
    isUserDefined: Boolean @rename(attribute: "is_user_defined")
    attributeFamilyId: ID @rename(attribute: "attribute_family_id")
    customAttributes: [CustomerAttributeInput] @rename(attribute: "custom_attributes")
}

input CustomerAttributeInput {
    id: Int!
    position: Int!
}

input CreateAttributeFamilyInput {
    code: String!
    name: String!
    attributeGroups: [CreateAttributeGroupInput!] @rename(attribute: "attribute_groups")
}

input FilterAttributeFamiliesInput {
    id: ID
    code: String
    name: String
}

type AttributeFamily {
    id: ID!
    code: String!
    name: String!
    status: Boolean
    isUserDefined: Boolean @rename(attribute: "is_user_defined")
    attributeGroups: [AttributeGroup!] @hasMany(relation: "attribute_groups")
    products:  [Product!] @hasMany
    success: String
}

type AttributeGroup {
    id: ID!
    name: String!
    position: Int!
    isUserDefined: Boolean @rename(attribute: "is_user_defined")
    attributeFamilyId: ID! @rename(attribute: "attribute_family_id")
    customAttributes: [Attribute] @belongsTo(relation: "custom_attributes")
    success: String
}
